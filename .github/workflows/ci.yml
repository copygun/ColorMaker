name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/**', 'refactor/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  lint:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
            
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🎨 Check formatting
        run: npm run format:check
        
      - name: 🔍 Run ESLint
        run: npm run lint

  typecheck:
    name: 📝 TypeScript Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
            
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 📝 Run TypeScript check
        run: npm run typecheck

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
            
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests with coverage
        run: npm run test:coverage || npm run test
        
      - name: 📊 Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
            
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build project
        run: npm run build
        
      - name: 📊 Check bundle size
        run: |
          echo "Bundle Size Report:"
          du -sh dist/
          find dist -name "*.js" -exec ls -lh {} \; | head -10
        
      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
        
      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate || true
        
      - name: 🔍 Check for known vulnerabilities
        run: npx audit-ci --moderate || true